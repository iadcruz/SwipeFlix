// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  email String @unique
  username String @unique
  clerkId String @unique
  name String?
  bio String?
  image String?
  location String?
  website String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  currentlyWatching String?

  likes Like[] @relation("likes")
  watchLater Later[] @relation("later")

  followers Follows[] @relation("following")
  following Follows[] @relation("followers")

  notifications Notification[] @relation("userNotifications")
  notificationsCreated Notification[] @relation("notificationCreator")
}

model Movie {
  id String @id @default(cuid())
  title String
  desc String
  image String
  releaseDate String
  rating String

  likes Like[]
  laters Later[]
}

model Like {
  id String @id @default(cuid())
  authorId String
  movie Movie @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@unique([authorId])
  User User[] @relation("likes")
}

model Later {
  id String @id @default(cuid())
  authorId String
  movie Movie @relation(fields: [authorId], references: [id], onDelete: Cascade)

  User User[] @relation("later")
}

model Follows {
  followerId String
  followingId String
  createdAt DateTime @default(now())

  follower User @relation("followers", fields: [followerId], references: [id], onDelete: Cascade)
  following User @relation("following", fields: [followingId], references: [id], onDelete: Cascade)

  @@index([followerId, followingId])
  @@id([followerId, followingId])
}

model Notification {
  id String @id @default(cuid())
  userId String
  creatorId String
  type NotificationType
  read Boolean @default(false)
  createdAt DateTime @default(now())

  user User @relation("userNotifications", fields: [userId], references: [id], onDelete: Cascade)
  creator User @relation("notificationCreator", fields: [creatorId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt])
}

enum NotificationType {
  FOLLOW
}